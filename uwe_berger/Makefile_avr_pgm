# 
# Makefile fuer ubasic auf einem AVR
#
#

#MCU		 = atmega168
MCU		     = atmega328p
#MCU		 = atmega644p
TARGET_ARCH  = -mmcu=$(MCU)
OBJECTS      = ubasic_avr_pgm.o uart/usart.o avr_basic/ubasic.o avr_basic/ubasic_ext_proc.o
OBJECTS     += avr_basic/tokenizer.o avr_basic/ubasic_call.o  avr_basic/ubasic_avr.o
OBJECTS     += avr_basic/ubasic_cvars.o ubasic_tests.o mem_check/mem_check.o
AVRDUDE_PROGRAMMER = usbasp
TARGET	= ubasic_avr_pgm


CC      = avr-gcc
CFLAGS  = -Os -g -Wall -std=gnu99 -I. 
CFLAGS  += -fno-strict-aliasing
CFLAGS  += -finline-limit=4 -fno-if-conversion -mcall-prologues
CFLAGS  += -funsigned-char  -funsigned-bitfields -fpack-struct -fshort-enums
# -fno-tree-scev-cprop and -fno-split-wide-types since avr-gcc 4.3.0
CFLAGS  += -fno-tree-scev-cprop -fno-split-wide-types 

CFLAGS  += -DF_CPU=16000000UL
CFLAGS  += -DUSE_AVR=1
CFLAGS  += -DACCESS_VIA_PGM=1
ASFLAGS = -Os -g -Wall -I.
LDFLAGS = -g
#LDFLAGS += -Wl,--relax
MODULES = $(OBJECTS)


all:	ubasic_avr_pgm.hex

clean:
	rm -f *.hex *.elf  ubasic_avr_pgm.elf *.o *.d avr_basic/*.o uart/*.o mem_check/*.o

ubasic_avr_pgm.elf: $(MODULES)
	$(LINK.o) -o $@ $(MODULES)

ubasic_avr_pgm.hex: ubasic_avr_pgm.elf
	avr-objcopy -j .text -j .data -O ihex ubasic_avr_pgm.elf ubasic_avr_pgm.hex
	avr-size ubasic_avr_pgm.hex

disasm: ubasic_avr_pgm.elf
	avr-objdump -S ubasic_avr_pgm.elf

flash:
	avrdude -p $(MCU) -c $(AVRDUDE_PROGRAMMER) -U flash:w:$(TARGET).hex	

ubasic_avr_pgm.o: ubasic_avr_pgm.c

.PHONY: pretty_code
pretty_code:
	rm -f *.hex *.elf  ubasic_avr_pgm.elf *.o *.d avr_basic/*.o uart/*.o mem_check/*.o
	find */*.c -type f -print0 | xargs -0 fromdos -p
	find */*.h -type f -print0 | xargs -0 fromdos -p
	find */*.bas -type f -print0 | xargs -0 fromdos -p
	fromdos -p Makefile*
	fromdos -p *.h
	fromdos -p *.c
	find . -type f -print0 | xargs -0 chmod 644
