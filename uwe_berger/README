uBasic - Datei-/Verzeichnisstruktur
===================================
       Uwe Berger; 2010, 2011
  
  
Root-Verzeichnis:
-----------------

ubasic_tests.* --> einige Basic-Testprogramme, welche in den PROGMEM
                   eines AVR geladen werden koennen
                   
Beispielimplementationen: im jeweiligen Quellcode der Beispielimplemen-
                          tationen sind weitere Hinweise enthalten...

--> ubasic_avr_pgm.c, Makefile_avr_pgm
    * fuer AVR
    * Basic-Programme liegen im PROGMEM
    * Ein-/Ausgabe via serieller Schnittstelle

--> ubasic_avr_sd.c, Makefile_avr_sd
    * fuer AVR
    * Basic-Programme liegen auf einer SD-Karte (entsp. Hardware er-
      forderlich)
    * Ein-/Ausgabe via serieller Schnittstelle


--> ubasic_avr_sd_lc7981.c, Makefile_avr_sd_lc7981
    * fuer AVR
    * Basic-Programme liegen auf einer SD-Karte (entsp. Hardware er-
      forderlich)
    * Ein-/Ausgabe via serieller Schnittstelle
    * via Basic-CALL-Befehle kann auf ein Grafikdisplay mit LC7981 zu-
      gegriffen werden


--> ubasic_file.c, Makefile_file
    * Linuxplattform
    * Basic-Programme liegen als Dateien vor



Unterverzeichnisse:
-------------------

avr_basic/ --> Quellcode des Basic-Interpreters

basic/     --> einige Basic-Testprogramme

doku/      --> Dokumentation

lc7981/    --> Zugriffsroutinen zur Ansteuerung von Grafik-
               displays mit LC7981-Controller (fuer AVR)

mem_check/ --> Routinen zur Berechnung des Speicherverbrauchs (fuer AVR)

sd_card/   --> Zugriffsroutinen auf SD-Karten (fuer AVR)

uart/      --> serielle Schnittstelle (fuer AVR)


Uebersetzen, Flashen (Bsp.):
----------------------------

make -f Makefile_avr_sd_lc7981 clean
make -f Makefile_avr_sd_lc7981 
make -f Makefile_avr_sd_lc7981 flash

Hinweis: in den jeweiligen Makefiles sind natuerlich die ueblichen An-
passungen an seine Umgebung (Controllertyp, Flash-Hardware) vorzunehmen.
